server.port: 8016
spring.application.name: course-composite

springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: io.javatab.microservices.composite.course
  pathsToMatch: /**
  cache:
    disabled: true
  swagger-ui:
    oauth2-redirect-url: http://localhost:8443/webjars/swagger-ui/oauth2-redirect.html
    oauth:
      clientId: writer
      clientSecret: secret
      useBasicAuthenticationWithAccessCodeGrant: true
  oAuthFlow:
    authorizationUrl: http://localhost:8443/oauth2/authorize
    tokenUrl: http://localhost:8443/oauth2/token

server.forward-headers-strategy: framework

open-api:
  version: 1.0.0
  title: Course Composite API
  description: Composite API to fetch data from multiple microservices
  termsOfService:
  license:
  licenseUrl:
  externalDocDesc:
  externalDocUrl:
  contact:
    name: Nasruddin
    url:
    email: webo.geeky@mail.com

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information
    notFound.description: Not found, the specified id does not exist
    unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  course-composite:
    get-composite-course:
      description: Returns a composite view of the specified course id
      notes: |
        # Normal response
        If the requested course id is found the method will return information regarding:
        1. Base course information
        1. Student subscribed
        1. Vote
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)

        ## Course id 113
        200 - Ok, but no students will be returned

        ## Non numerical course id
        400 - A **Bad Request** error will be returned

        ## course id 13
        404 - A **Not Found** error will be returned

        ## Negative course ids
        422 - An **Unprocessable Entity** error will be returned

app:
  eureka-username: user
  eureka-password: password
  eureka-server: localhost
  auth-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"

    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://${app.auth-server}:9999

logging:
  level:
    root: INFO
    se.magnus: DEBUG
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

---
spring.config.activate.on-profile: docker
server.port: 8080
app:
  eureka-server: eureka
  auth-server: auth-server
